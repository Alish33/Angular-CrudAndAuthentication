{"version":3,"file":"firebase.app.module.d.ts","sources":["firebase.app.module.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA","sourcesContent":["import { InjectionToken, ModuleWithProviders, NgZone, Version } from '@angular/core';\nimport firebase from 'firebase/app';\nexport interface FirebaseOptions {\n    [key: string]: any;\n}\nexport interface FirebaseAppConfig {\n    [key: string]: any;\n}\nexport declare const FIREBASE_OPTIONS: InjectionToken<FirebaseOptions>;\nexport declare const FIREBASE_APP_NAME: InjectionToken<string | FirebaseAppConfig>;\nexport declare class FirebaseApp implements Partial<firebase.app.App> {\n    name: string;\n    options: {};\n    analytics: () => firebase.analytics.Analytics;\n    auth: () => firebase.auth.Auth;\n    database: (databaseURL?: string) => firebase.database.Database;\n    messaging: () => firebase.messaging.Messaging;\n    performance: () => firebase.performance.Performance;\n    storage: (storageBucket?: string) => firebase.storage.Storage;\n    delete: () => Promise<void>;\n    firestore: () => firebase.firestore.Firestore;\n    functions: (region?: string) => firebase.functions.Functions;\n    remoteConfig: () => firebase.remoteConfig.RemoteConfig;\n}\nexport declare const VERSION: Version;\nexport declare function ɵfirebaseAppFactory(options: FirebaseOptions, zone: NgZone, nameOrConfig?: string | FirebaseAppConfig | null): FirebaseApp;\nexport declare const ɵlogAuthEmulatorError: () => void;\nexport declare function ɵfetchInstance<T>(cacheKey: any, moduleName: string, app: FirebaseApp, fn: () => T, args: any[]): T;\nexport declare class AngularFireModule {\n    static initializeApp(options: FirebaseOptions, nameOrConfig?: string | FirebaseAppConfig): ModuleWithProviders<AngularFireModule>;\n    constructor(platformId: Object);\n}\n"]}