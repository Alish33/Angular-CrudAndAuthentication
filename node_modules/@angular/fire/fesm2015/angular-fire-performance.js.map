{"version":3,"file":"angular-fire-performance.js","sources":["../../../src/performance/base.ts","../../../src/performance/performance.ts","../../../src/performance/performance.service.ts","../../../src/performance/performance.module.ts","../../../src/performance/angular-fire-performance.ts"],"sourcesContent":["export const proxyPolyfillCompat = {\n  trace: null,\n  instrumentationEnabled: null,\n  dataCollectionEnabled: null,\n};\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { EMPTY, Observable, of, Subscription } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { FirebaseApp, ɵapplyMixins, ɵlazySDKProxy, ɵPromiseProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends ɵPromiseProxy<firebase.performance.Performance> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n\n  private readonly performance: Observable<firebase.performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled: boolean | null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled: boolean | null,\n    private zone: NgZone,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : EMPTY),\n      map(() => ɵfetchInstance(`performance`, 'AngularFirePerformance', app, () => {\n        const performance = zone.runOutsideAngular(() => app.performance());\n        if (instrumentationEnabled === false) {\n          performance.instrumentationEnabled = false;\n        }\n        if (dataCollectionEnabled === false) {\n          performance.dataCollectionEnabled = false;\n        }\n        return performance;\n      }, [instrumentationEnabled, dataCollectionEnabled])),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n}\n\nconst trace$ = (traceId: string) => {\n  if (typeof window !== 'undefined' && window.performance) {\n    const entries = window.performance.getEntriesByName(traceId, 'measure') || [];\n    const startMarkName = `_${traceId}Start[${entries.length}]`;\n    const endMarkName = `_${traceId}End[${entries.length}]`;\n    return new Observable<void>(emitter => {\n      window.performance.mark(startMarkName);\n      emitter.next();\n      return {\n        unsubscribe: () => {\n          window.performance.mark(endMarkName);\n          window.performance.measure(traceId, startMarkName, endMarkName);\n        }\n      };\n    });\n  } else {\n    return EMPTY;\n  }\n};\n\nexport const traceUntil = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      a => test(a) && traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceWhile = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  let traceSubscription: Subscription | undefined;\n  return source$.pipe(\n    tap(\n      a => {\n        if (test(a)) {\n          traceSubscription = traceSubscription || trace$(name).subscribe();\n        } else {\n          if (traceSubscription) {\n            traceSubscription.unsubscribe();\n          }\n\n          traceSubscription = undefined;\n        }\n      },\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilComplete = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => {\n      },\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilFirst = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => {\n      }\n    )\n  ).subscribe(subscriber);\n});\n\nexport const trace = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nɵapplyMixins(AngularFirePerformance, [proxyPolyfillCompat]);\n","import { ApplicationRef, Injectable, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first, tap } from 'rxjs/operators';\n\nconst IS_STABLE_START_MARK = '_isStableStart';\nconst IS_STABLE_END_MARK = '_isStableEnd';\n\nfunction markStarts() {\n    if (typeof(window) !== 'undefined' && window.performance) {\n        window.performance.mark(IS_STABLE_START_MARK);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst started = markStarts();\n\n@Injectable()\nexport class PerformanceMonitoringService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    constructor(appRef: ApplicationRef) {\n        if (started) {\n            this.disposable = appRef.isStable.pipe(\n                first(it => it),\n                tap(() => {\n                    window.performance.mark(IS_STABLE_END_MARK);\n                    window.performance.measure('isStable', IS_STABLE_START_MARK, IS_STABLE_END_MARK);\n                })\n            ).subscribe();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\nimport { PerformanceMonitoringService } from './performance.service';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(\n    perf: AngularFirePerformance,\n    @Optional() _: PerformanceMonitoringService\n  ) {\n    // call anything here to get perf loading\n    // tslint:disable-next-line:no-unused-expression\n    perf.dataCollectionEnabled.then(() => {});\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}