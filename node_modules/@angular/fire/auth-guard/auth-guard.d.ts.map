{"version":3,"file":"auth-guard.d.ts","sources":["auth-guard.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, UnaryFunction } from 'rxjs';\nimport firebase from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\nexport declare type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport declare type AuthPipe = UnaryFunction<Observable<firebase.User | null>, Observable<boolean | string | any[]>>;\nexport declare const loggedIn: AuthPipe;\nexport declare class AngularFireAuthGuard implements CanActivate {\n    private router;\n    private auth;\n    constructor(router: Router, auth: AngularFireAuth);\n    canActivate: (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => Observable<boolean | import(\"@angular/router\").UrlTree>;\n}\nexport declare const canActivate: (pipe: AuthPipeGenerator) => {\n    canActivate: (typeof AngularFireAuthGuard)[];\n    data: {\n        authGuardPipe: AuthPipeGenerator;\n    };\n};\nexport declare const isNotAnonymous: AuthPipe;\nexport declare const idTokenResult: import(\"rxjs\").OperatorFunction<firebase.User, any>;\nexport declare const emailVerified: AuthPipe;\nexport declare const customClaims: UnaryFunction<Observable<firebase.User>, Observable<any>>;\nexport declare const hasCustomClaim: (claim: string) => AuthPipe;\nexport declare const redirectUnauthorizedTo: (redirect: string | any[]) => AuthPipe;\nexport declare const redirectLoggedInTo: (redirect: string | any[]) => AuthPipe;\n"]}