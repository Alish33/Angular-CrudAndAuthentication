{"version":3,"file":"angular-fire-auth.js","sources":["../../../src/auth/base.ts","../../../src/auth/auth.ts","../../../src/auth/auth.module.ts","../../../src/auth/angular-fire-auth.ts"],"names":[],"mappings":"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","sourcesContent":["export const proxyPolyfillCompat = {\n  app: null,\n  applyActionCode: null,\n  checkActionCode: null,\n  confirmPasswordReset: null,\n  createUserWithEmailAndPassword: null,\n  currentUser: null,\n  fetchSignInMethodsForEmail: null,\n  isSignInWithEmailLink: null,\n  getRedirectResult: null,\n  languageCode: null,\n  settings: null,\n  onAuthStateChanged: null,\n  onIdTokenChanged: null,\n  sendSignInLinkToEmail: null,\n  sendPasswordResetEmail: null,\n  setPersistence: null,\n  signInAndRetrieveDataWithCredential: null,\n  signInAnonymously: null,\n  signInWithCredential: null,\n  signInWithCustomToken: null,\n  signInWithEmailAndPassword: null,\n  signInWithPhoneNumber: null,\n  signInWithEmailLink: null,\n  signInWithPopup: null,\n  signInWithRedirect: null,\n  signOut: null,\n  tenantId: null,\n  updateCurrentUser: null,\n  useDeviceLanguage: null,\n  useEmulator: null,\n  verifyPasswordResetCode: null,\n};\n","import { Injectable, Inject, Optional, NgZone, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { Observable, of, from, merge, Subject, Subscriber } from 'rxjs';\nimport { switchMap, map, observeOn, shareReplay, first, filter, switchMapTo, subscribeOn } from 'rxjs/operators';\nimport {\n  FIREBASE_OPTIONS,\n  FIREBASE_APP_NAME,\n  FirebaseOptions,\n  FirebaseAppConfig,\n  ɵPromiseProxy,\n  ɵlazySDKProxy,\n  ɵfirebaseAppFactory,\n  ɵAngularFireSchedulers,\n  ɵkeepUnstableUntilFirstFactory,\n  ɵapplyMixins\n} from '@angular/fire';\nimport firebase from 'firebase/app';\nimport { isPlatformServer } from '@angular/common';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\nexport interface AngularFireAuth extends ɵPromiseProxy<firebase.auth.Auth> {}\n\ntype UseEmulatorArguments = [string, number];\nexport const USE_EMULATOR = new InjectionToken<UseEmulatorArguments>('angularfire2.auth.use-emulator');\n\nexport const SETTINGS = new InjectionToken<firebase.auth.AuthSettings>('angularfire2.auth.settings');\nexport const TENANT_ID = new InjectionToken<string>('angularfire2.auth.tenant-id');\nexport const LANGUAGE_CODE = new InjectionToken<string>('angularfire2.auth.langugage-code');\nexport const USE_DEVICE_LANGUAGE = new InjectionToken<boolean>('angularfire2.auth.use-device-language');\nexport const PERSISTENCE = new InjectionToken<string>('angularfire.auth.persistence');\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuth {\n\n  /**\n   * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n   */\n  public readonly authState: Observable<firebase.User|null>;\n\n  /**\n   * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n   */\n  public readonly idToken: Observable<string|null>;\n\n  /**\n   * Observable of the currently signed-in user (or null).\n   */\n  public readonly user: Observable<firebase.User|null>;\n\n  /**\n   * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n   * helper properties for getting different data associated with the token as well as all the decoded payload claims\n   * (or null).\n   */\n  public readonly idTokenResult: Observable<firebase.auth.IdTokenResult|null>;\n\n  /**\n   * Observable of the currently signed-in user's credential, or null\n   */\n  public readonly credential: Observable<Required<firebase.auth.UserCredential>|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string|FirebaseAppConfig|null|undefined,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    @Optional() @Inject(USE_EMULATOR) _useEmulator: any, // can't use the tuple here\n    @Optional() @Inject(SETTINGS) _settings: any, // can't use firebase.auth.AuthSettings here\n    @Optional() @Inject(TENANT_ID) tenantId: string | null,\n    @Optional() @Inject(LANGUAGE_CODE) languageCode: string | null,\n    @Optional() @Inject(USE_DEVICE_LANGUAGE) useDeviceLanguage: boolean | null,\n    @Optional() @Inject(PERSISTENCE) persistence: string | null,\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n    const logins = new Subject<Required<firebase.auth.UserCredential>>();\n\n    const auth = of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => zone.runOutsideAngular(() => {\n        const useEmulator: UseEmulatorArguments | null = _useEmulator;\n        const settings: firebase.auth.AuthSettings | null = _settings;\n        return ɵfetchInstance(`${app.name}.auth`, 'AngularFireAuth', app, () => {\n          const auth = zone.runOutsideAngular(() => app.auth());\n          if (useEmulator) {\n            // Firebase Auth doesn't conform to the useEmulator convention, let's smooth that over\n            auth.useEmulator(`http://${useEmulator.join(':')}`);\n          }\n          if (tenantId) {\n            auth.tenantId = tenantId;\n          }\n          auth.languageCode = languageCode;\n          if (useDeviceLanguage) {\n            auth.useDeviceLanguage();\n          }\n          if (settings) {\n            for (const [k, v] of Object.entries(settings)) {\n              auth.settings[k] = v;\n            }\n          }\n          if (persistence) {\n            auth.setPersistence(persistence);\n          }\n          return auth;\n        }, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\n      })),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    if (isPlatformServer(platformId)) {\n\n      this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\n\n    } else {\n\n      // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n      //       (e.g, `import { auth } from 'firebase/app'`) are getting an undefined auth object unexpectedly\n      //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n      //       There could potentially be race conditions still... but this greatly decreases the odds while\n      //       we reevaluate the API.\n      const _ = auth.pipe(first()).subscribe();\n\n      const redirectResult = auth.pipe(\n        switchMap(auth => auth.getRedirectResult().then(it => it, () => null)),\n        keepUnstableUntilFirst,\n        shareReplay({ bufferSize: 1, refCount: false }),\n      );\n\n      const fromCallback = <T = any>(cb: (sub: Subscriber<T>) => () => void) => new Observable<T>(subscriber =>\n        ({ unsubscribe: zone.runOutsideAngular(() => cb(subscriber)) })\n      );\n\n      const authStateChanged = auth.pipe(\n        switchMap(auth => fromCallback(auth.onAuthStateChanged.bind(auth))),\n      );\n\n      const idTokenChanged = auth.pipe(\n        switchMap(auth => fromCallback(auth.onIdTokenChanged.bind(auth)))\n      );\n\n      this.authState = redirectResult.pipe(\n        switchMapTo(authStateChanged),\n        subscribeOn(schedulers.outsideAngular),\n        observeOn(schedulers.insideAngular),\n      );\n\n      this.user = redirectResult.pipe(\n        switchMapTo(idTokenChanged),\n        subscribeOn(schedulers.outsideAngular),\n        observeOn(schedulers.insideAngular),\n      );\n\n      this.idToken = this.user.pipe(\n        switchMap(user => user ? from(user.getIdToken()) : of(null))\n      );\n\n      this.idTokenResult = this.user.pipe(\n        switchMap(user => user ? from(user.getIdTokenResult()) : of(null))\n      );\n\n      this.credential = merge(\n        redirectResult,\n        logins,\n        // pipe in null authState to make credential zipable, just a weird devexp if\n        // authState and user go null to still have a credential\n        this.authState.pipe(filter(it => !it))\n      ).pipe(\n        // handle the { user: { } } when a user is already logged in, rather have null\n        // TODO handle the type corcersion better\n        map(credential => credential?.user ? credential as Required<firebase.auth.UserCredential> : null),\n        subscribeOn(schedulers.outsideAngular),\n        observeOn(schedulers.insideAngular),\n      );\n\n    }\n\n    return ɵlazySDKProxy(this, auth, zone, { spy: {\n      apply: (name, _, val) => {\n        // If they call a signIn or createUser function listen into the promise\n        // this will give us the user credential, push onto the logins Subject\n        // to be consumed in .credential\n        if (name.startsWith('signIn') || name.startsWith('createUser')) {\n          // TODO fix the types, the trouble is UserCredential has everything optional\n          val.then((user: firebase.auth.UserCredential) => logins.next(user as any));\n        }\n      }\n    }});\n\n  }\n\n}\n\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuth } from './auth';\n\n@NgModule({\n  providers: [ AngularFireAuth ]\n})\nexport class AngularFireAuthModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}