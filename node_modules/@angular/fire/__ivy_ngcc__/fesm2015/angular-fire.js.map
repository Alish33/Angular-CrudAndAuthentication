{"version":3,"file":"angular-fire.js","sources":["../../../src/core/angularfire2.ts","../../../src/core/firebase.app.module.ts","../../../src/core/angular-fire.ts"],"names":["NG_VERSION"],"mappings":"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","sourcesContent":["import { NgZone } from '@angular/core';\nimport {\n  asyncScheduler,\n  Observable,\n  Operator,\n  queueScheduler,\n  SchedulerAction,\n  SchedulerLike,\n  Subscriber,\n  Subscription,\n  TeardownLogic\n} from 'rxjs';\nimport { observeOn, subscribeOn, tap } from 'rxjs/operators';\n\nfunction noop() {\n}\n\n/**\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\n */\n// tslint:disable-next-line:class-name\nexport class ɵZoneScheduler implements SchedulerLike {\n  constructor(private zone: any, private delegate: any = queueScheduler) {\n  }\n\n  now() {\n    return this.delegate.now();\n  }\n\n  schedule(work: (this: SchedulerAction<any>, state?: any) => void, delay?: number, state?: any): Subscription {\n    const targetZone = this.zone;\n    // Wrap the specified work function to make sure that if nested scheduling takes place the\n    // work is executed in the correct zone\n    const workInZone = function(this: SchedulerAction<any>, state: any) {\n      targetZone.runGuarded(() => {\n        work.apply(this, [state]);\n      });\n    };\n\n    // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n    // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n    // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n    return this.delegate.schedule(workInZone, delay, state);\n  }\n}\n\n// tslint:disable-next-line:class-name\nexport class ɵBlockUntilFirstOperator<T> implements Operator<T, T> {\n  private task: MacroTask | null = null;\n\n  constructor(private zone: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: Observable<T>): TeardownLogic {\n    const unscheduleTask = this.unscheduleTask.bind(this);\n    this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n\n    return source.pipe(\n      tap({ next: unscheduleTask, complete: unscheduleTask, error: unscheduleTask })\n    ).subscribe(subscriber).add(unscheduleTask);\n  }\n\n  private unscheduleTask() {\n    // maybe this is a race condition, invoke in a timeout\n    // hold for 10ms while I try to figure out what is going on\n    setTimeout(() => {\n      if (this.task != null && this.task.state === 'scheduled') {\n        this.task.invoke();\n        this.task = null;\n      }\n    }, 10);\n  }\n}\n\n// tslint:disable-next-line:class-name\nexport class ɵAngularFireSchedulers {\n  public readonly outsideAngular: ɵZoneScheduler;\n  public readonly insideAngular: ɵZoneScheduler;\n\n  constructor(public ngZone: NgZone) {\n    this.outsideAngular = ngZone.runOutsideAngular(() => new ɵZoneScheduler(Zone.current));\n    this.insideAngular = ngZone.run(() => new ɵZoneScheduler(Zone.current, asyncScheduler));\n  }\n}\n\n/**\n * Operator to block the zone until the first value has been emitted or the observable\n * has completed/errored. This is used to make sure that universal waits until the first\n * value from firebase but doesn't block the zone forever since the firebase subscription\n * is still alive.\n */\nexport function ɵkeepUnstableUntilFirstFactory(schedulers: ɵAngularFireSchedulers) {\n  return function keepUnstableUntilFirst<T>(obs$: Observable<T>): Observable<T> {\n    obs$ = obs$.lift(\n      new ɵBlockUntilFirstOperator(schedulers.ngZone)\n    );\n\n    return obs$.pipe(\n      // Run the subscribe body outside of Angular (e.g. calling Firebase SDK to add a listener to a change event)\n      subscribeOn(schedulers.outsideAngular),\n      // Run operators inside the angular zone (e.g. side effects via tap())\n      observeOn(schedulers.insideAngular)\n      // INVESTIGATE https://github.com/angular/angularfire/pull/2315\n      // share()\n    );\n  };\n}\n\n// tslint:disable:ban-types\ntype FunctionPropertyNames<T> = { [K in keyof T]: T[K] extends Function ? K : never }[keyof T];\ntype PromiseReturningFunctionPropertyNames<T> = {\n  [K in FunctionPropertyNames<T>]: ReturnType<T[K]> extends Promise<any> ? K : never\n}[FunctionPropertyNames<T>];\ntype NonPromiseReturningFunctionPropertyNames<T> = {\n  [K in FunctionPropertyNames<T>]: ReturnType<T[K]> extends Promise<any> ? never : K\n}[FunctionPropertyNames<T>];\ntype NonFunctionPropertyNames<T> = { [K in keyof T]: T[K] extends Function ? never : K }[keyof T];\n// tslint:enable:ban-types\n\nexport type ɵPromiseProxy<T> = { [K in NonFunctionPropertyNames<T>]: Promise<T[K]> } &\n  { [K in NonPromiseReturningFunctionPropertyNames<T>]: (...args: Parameters<T[K]>) => Promise<ReturnType<T[K]>> } &\n  { [K in PromiseReturningFunctionPropertyNames<T>]: (...args: Parameters<T[K]>) => ReturnType<T[K]> };\n\n\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\nconst noopFunctions = ['ngOnDestroy'];\n\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\nexport const ɵlazySDKProxy = (klass: any, observable: Observable<any>, zone: NgZone, options: {\n  spy?: {\n    get?: ((name: string, it: any) => void),\n    apply?: ((name: string, args: any[], it: any) => void)\n  }\n} = {}) => {\n  return new Proxy(klass, {\n    get: (_, name: string) => zone.runOutsideAngular(() => {\n      if (klass[name]) {\n        if (options?.spy?.get) {\n          options.spy.get(name, klass[name]);\n        }\n        return klass[name];\n      }\n      if (noopFunctions.indexOf(name) > -1) {\n        return () => {\n        };\n      }\n      const promise = observable.toPromise().then(mod => {\n        const ret = mod && mod[name];\n        // TODO move to proper type guards\n        if (typeof ret === 'function') {\n          return ret.bind(mod);\n        } else if (ret && ret.then) {\n          return ret.then((res: any) => zone.run(() => res));\n        } else {\n          return zone.run(() => ret);\n        }\n      });\n      // recurse the proxy\n      return new Proxy(() => {}, {\n          get: (_, name) => promise[name],\n          // TODO handle callbacks as transparently as I can\n          apply: (self, _, args) => promise.then(it => {\n            const res = it && it(...args);\n            if (options?.spy?.apply) {\n              options.spy.apply(name, args, res);\n            }\n            return res;\n          })\n        }\n      );\n    })\n  });\n};\n\nexport const ɵapplyMixins = (derivedCtor: any, constructors: any[]) => {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype || baseCtor).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype || baseCtor, name)\n      );\n    });\n  });\n};\n","import {\n  Inject, InjectionToken, isDevMode, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, VERSION as NG_VERSION, Version\n} from '@angular/core';\nimport firebase from 'firebase/app';\n\n// INVESTIGATE Public types don't expose FirebaseOptions or FirebaseAppConfig, is this the case anylonger?\nexport interface FirebaseOptions {\n  [key: string]: any;\n}\n\nexport interface FirebaseAppConfig {\n  [key: string]: any;\n}\n\nexport const FIREBASE_OPTIONS = new InjectionToken<FirebaseOptions>('angularfire2.app.options');\nexport const FIREBASE_APP_NAME = new InjectionToken<string | FirebaseAppConfig | undefined>('angularfire2.app.nameOrConfig');\n\n// Have to implement as we need to return a class from the provider, we should consider exporting\n// this in the firebase/app types as this is our highest risk of breaks\nexport class FirebaseApp implements Partial<firebase.app.App> {\n  name: string;\n  options: {};\n  analytics: () => firebase.analytics.Analytics;\n  auth: () => firebase.auth.Auth;\n  database: (databaseURL?: string) => firebase.database.Database;\n  messaging: () => firebase.messaging.Messaging;\n  performance: () => firebase.performance.Performance;\n  storage: (storageBucket?: string) => firebase.storage.Storage;\n  delete: () => Promise<void>;\n  firestore: () => firebase.firestore.Firestore;\n  functions: (region?: string) => firebase.functions.Functions;\n  remoteConfig: () => firebase.remoteConfig.RemoteConfig;\n}\n\nexport const VERSION = new Version('ANGULARFIRE2_VERSION');\n\nexport function ɵfirebaseAppFactory(options: FirebaseOptions, zone: NgZone, nameOrConfig?: string | FirebaseAppConfig | null) {\n  const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n  const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n  config.name = config.name || name;\n  // Added any due to some inconsistency between @firebase/app and firebase types\n  const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0] as any;\n  // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n  // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n  const app = (existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config as any))) as FirebaseApp;\n  try {\n    if (JSON.stringify(options) !== JSON.stringify(app.options)) {\n      const hmr = !!(module as any).hot;\n      log('error', `${app.name} Firebase App already initialized with different options${hmr ? ', you may need to reload as Firebase is not HMR aware.' : '.'}`);\n    }\n  } catch (e) { }\n  return app;\n}\n\nexport const ɵlogAuthEmulatorError = () => {\n  // TODO sort this out, https://github.com/angular/angularfire/issues/2656\n  log('warn', 'You may need to import \\'firebase/auth\\' manually in your component rather than rely on AngularFireAuth\\'s dynamic import, when using the emulator suite https://github.com/angular/angularfire/issues/2656');\n};\n\nconst log = (level: 'log'|'error'|'info'|'warn', ...args: any) => {\n  if (isDevMode() && typeof console !== 'undefined') {\n    console[level](...args);\n  }\n};\n\nglobalThis.ɵAngularfireInstanceCache ||= new Map();\n\nexport function ɵfetchInstance<T>(cacheKey: any, moduleName: string, app: FirebaseApp, fn: () => T, args: any[]): T {\n  const [instance, ...cachedArgs] = globalThis.ɵAngularfireInstanceCache.get(cacheKey) || [];\n  if (instance) {\n    try {\n      if (args.some((arg, i) => {\n        const cachedArg = cachedArgs[i];\n        if (arg && typeof arg === 'object') {\n          return JSON.stringify(arg) !== JSON.stringify(cachedArg);\n        } else {\n          return arg !== cachedArg;\n        }\n      })) {\n        const hmr = !!(module as any).hot;\n        log('error', `${moduleName} was already initialized on the ${app.name} Firebase App instance with different settings.${hmr ? ' You may need to reload as Firebase is not HMR aware.' : ''}`);\n      }\n    } catch (e) { }\n    return instance;\n  } else {\n    const newInstance = fn();\n    globalThis.ɵAngularfireInstanceCache.set(cacheKey, [newInstance, ...args]);\n    return newInstance;\n  }\n}\n\nconst FIREBASE_APP_PROVIDER = {\n  provide: FirebaseApp,\n  useFactory: ɵfirebaseAppFactory,\n  deps: [\n    FIREBASE_OPTIONS,\n    NgZone,\n    [new Optional(), FIREBASE_APP_NAME]\n  ]\n};\n\n@NgModule({\n  providers: [FIREBASE_APP_PROVIDER]\n})\nexport class AngularFireModule {\n  static initializeApp(options: FirebaseOptions, nameOrConfig?: string | FirebaseAppConfig): ModuleWithProviders<AngularFireModule> {\n    return {\n      ngModule: AngularFireModule,\n      providers: [\n        {provide: FIREBASE_OPTIONS, useValue: options},\n        {provide: FIREBASE_APP_NAME, useValue: nameOrConfig}\n      ]\n    };\n  }\n\n  // tslint:disable-next-line:ban-types\n  constructor(@Inject(PLATFORM_ID) platformId: Object) {\n    firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\n    firebase.registerVersion('angular', NG_VERSION.full);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}