{"version":3,"file":"angular-fire-auth-guard.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts","../../../src/auth-guard/angular-fire-auth-guard.ts"],"names":[],"mappings":";;;;;;;;;;;;WAUsC,IAAI,IAAI,CAAC,CAAC;AAAM,MAAzC,QAAQ,GAAa,GAAG,KAAiB;AACtD,MAIa,oBAAoB;AAAG,IAElC,YAAoB,MAAc,EAAU,IAAqB;AAAI,QAAjD,WAAM,GAAN,MAAM,CAAQ;AAAC,QAAS,SAAI,GAAJ,IAAI,CAAiB;AAAC,QAElE,gBAAW,GAAG,CAAC,IAA4B,EAAE,KAA0B;AACzE,YAAI,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,aAAkC,KAAK,MAAM,QAAQ,CAAC,CAAC;AAC7F,YAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACxB,IAAI,CAAC,CAAC,CAAC,EACP,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,EAC5B,GAAG,CAAC,GAAG;AACb,gBAAQ,IAAI,OAAO,GAAG,KAAK,SAAS,EAAE;AACtC,oBAAU,OAAO,GAAG,CAAC;AACrB,iBAAS;AAAC,qBAAK,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACvC,oBAAU,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAChD,iBAAS;AAAC,qBAAK;AACf;AACU,oBAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC3C,iBAAS;AACT,aAAO,CAAC,CACH,CAAC;AACN,SAAG,CAAA;AACH,KAnBuE;AACvE;0LACA;AAAC,0QAJI;AAAC;6BAHL,UAAU,vCAGc;EAHb,kBACV,pBAIS,YAhBmC,MAAM;QAYxC,EAAE,KAAK,cAClB,7BAbuD,YAI/C,eAAe;AAAG;;;;;;yGAAE;AAAC,MAkCjB,WAAW,GAAG,CAAC,IAAuB,MAAM;AACzD,IAAE,WAAW,EAAE,CAAE,oBAAoB,CAAE,EAAE,IAAI,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE;AACtE,CAAC,EAAE;AACH,WAE4C,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;AAAa,MAApE,cAAc,GAAa,GAAG,KAAsC;AACjF,WAAuC,CAAC,IAAwB,KAAK,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,IAAI;AAAG,MAAnG,aAAa,GAAG,SAAS,KAA0E;AAChH,WAA2C,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;AAAe,MAApE,aAAa,GAAa,GAAG,KAAuC;AACjF,WAAoD,aAAa,IAAI,aAAa,GAAG,aAAa,CAAC,MAAM,GAAG;AAAI,MAAnG,YAAY,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAA4D,EAAE;AACjH,MAAa,cAAc,GACzB,CAAC,KAAK,KAAK,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,MAAM,IAAK,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE;AAC9E,MAAa,sBAAsB,GACjC,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,EAAE;AACtE,MAAa,kBAAkB,GAC7B,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC;AAC5E;AAAC,MChDY,0BAA0B;AAAG;sDAHzC,QAAQ,SAAC,kBACR,SAAS,EAAE,CAAE,oBAAoB,CAAE;EACpC;;;;;;;0BACI;AAAC;ACNN;AACA;AACA;AACA;AACA;AACkM","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<firebase.User|null>, Observable<boolean|string|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  constructor(private router: Router, private auth: AngularFireAuth) {}\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.auth.user.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => {\n        if (typeof can === 'boolean') {\n          return can;\n        } else if (Array.isArray(can)) {\n          return this.router.createUrlTree(can);\n        } else {\n          // TODO(EdricChan03): Add tests\n          return this.router.parseUrl(can);\n        }\n      })\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n  canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: firebase.User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}